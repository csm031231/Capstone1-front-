import React, { useState, useEffect } from 'react';
import {
  View,
  Text,
  StyleSheet,
  TouchableOpacity,
  Modal,
  ScrollView,
  ActivityIndicator,
  Linking,
  Alert,
} from 'react-native';

const DisasterNewsModal = ({ visible, onClose }) => {
  const [news, setNews] = useState([]);
  const [loading, setLoading] = useState(false);

  // Îâ¥Ïä§ Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞
  const fetchNews = async () => {
    setLoading(true);
    try {
      // Ïã§Ï†ú Íµ¨ÌòÑÏãú API Ìò∏Ï∂ú
      const mockNews = [
        {
          id: 1,
          title: 'ÌÉúÌíç ÌûåÎÇ®ÎÖ∏ Í≤ΩÎ°ú Î∂ÑÏÑù Î∞è ÎåÄÎπÑ ÏöîÎ†π',
          content: 'Í∏∞ÏÉÅÏ≤≠Ïóê Îî∞Î•¥Î©¥ ÌÉúÌíç ÌûåÎÇ®ÎÖ∏Í∞Ä ÌïúÎ∞òÎèÑÎ•º Ìñ•Ìï¥ Î∂ÅÏÉÅÌïòÍ≥† ÏûàÏñ¥ Í∞ÅÎ≥ÑÌïú Ï£ºÏùòÍ∞Ä ÌïÑÏöîÌï©ÎãàÎã§...',
          source: 'KBS Îâ¥Ïä§',
          time: '30Î∂Ñ Ï†Ñ',
          category: 'ÌÉúÌíç',
          thumbnail: 'üå™Ô∏è',
          url: 'https://news.kbs.co.kr/news/view.do?ncd=example'
        },
        {
          id: 2,
          title: 'ÏßÄÏßÑ ÎåÄÎπÑ ÌñâÎèôÏöîÎ†π Î∞è ÎåÄÌîºÏÜå ÏúÑÏπò ÏïàÎÇ¥',
          content: 'ÏµúÍ∑º Í≤ΩÏ£º ÏßÄÏó≠ÏóêÏÑú Î∞úÏÉùÌïú ÏßÄÏßÑÏùÑ Í≥ÑÍ∏∞Î°ú ÏãúÎØºÎì§Ïùò ÏßÄÏßÑ ÎåÄÎπÑ ÏùòÏãùÏù¥ ÎÜíÏïÑÏßÄÍ≥† ÏûàÏäµÎãàÎã§...',
          source: 'MBC Îâ¥Ïä§',
          time: '1ÏãúÍ∞Ñ Ï†Ñ',
          category: 'ÏßÄÏßÑ',
          thumbnail: 'üèóÔ∏è',
          url: 'https://imnews.imbc.com/news/2023/example'
        },
        {
          id: 3,
          title: 'Í∏¥Í∏âÏû¨ÎÇúÎ¨∏Ïûê ÏãúÏä§ÌÖú Í≥†ÎèÑÌôî ÏûëÏóÖ ÏôÑÎ£å',
          content: 'ÌñâÏ†ïÏïàÏ†ÑÎ∂ÄÎäî Í∏¥Í∏âÏû¨ÎÇúÎ¨∏Ïûê ÏãúÏä§ÌÖúÏùò Ïã†ÏÜçÏÑ±Í≥º Ï†ïÌôïÏÑ±ÏùÑ ÎÜíÏù¥Í∏∞ ÏúÑÌïú Í≥†ÎèÑÌôî ÏûëÏóÖÏùÑ ÏôÑÎ£åÌñàÎã§Í≥† Î∞úÌëúÌñàÏäµÎãàÎã§...',
          source: 'Ïó∞Ìï©Îâ¥Ïä§',
          time: '2ÏãúÍ∞Ñ Ï†Ñ',
          category: 'ÏãúÏä§ÌÖú',
          thumbnail: 'üì±',
          url: 'https://www.yna.co.kr/view/example'
        },
        {
          id: 4,
          title: 'Í≤®Ïö∏Ï≤† ÌïúÌåå ÎåÄÎπÑ Ï∑®ÏïΩÍ≥ÑÏ∏µ Î≥¥Ìò∏ ÎåÄÏ±Ö Î∞úÌëú',
          content: 'Ï†ïÎ∂ÄÍ∞Ä Ïò¨Í≤®Ïö∏ ÌïúÌååÏóê ÎåÄÎπÑÌï¥ ÎèÖÍ±∞ÎÖ∏Ïù∏, ÎÖ∏ÏàôÏù∏ Îì± Ï∑®ÏïΩÍ≥ÑÏ∏µ Î≥¥Ìò∏Î•º ÏúÑÌïú Ï¢ÖÌï©ÎåÄÏ±ÖÏùÑ Î∞úÌëúÌñàÏäµÎãàÎã§...',
          source: 'SBS Îâ¥Ïä§',
          time: '3ÏãúÍ∞Ñ Ï†Ñ',
          category: 'ÌïúÌåå',
          thumbnail: '‚ùÑÔ∏è',
          url: 'https://news.sbs.co.kr/news/example'
        },
        {
          id: 5,
          title: 'AI Í∏∞Î∞ò Ïû¨ÎÇúÏòàÏ∏° ÏãúÏä§ÌÖú ÎèÑÏûÖ ÌôïÏÇ∞',
          content: 'Ï†ÑÍµ≠ ÏßÄÏûêÏ≤¥ÏóêÏÑú Ïù∏Í≥µÏßÄÎä• Í∏∞Ïà†ÏùÑ ÌôúÏö©Ìïú Ïû¨ÎÇúÏòàÏ∏° Î∞è ÎåÄÏùë ÏãúÏä§ÌÖú ÎèÑÏûÖÏù¥ ÌôïÏÇ∞ÎêòÍ≥† ÏûàÏäµÎãàÎã§...',
          source: 'YTN',
          time: '4ÏãúÍ∞Ñ Ï†Ñ',
          category: 'Í∏∞Ïà†',
          thumbnail: 'ü§ñ',
          url: 'https://www.ytn.co.kr/news/example'
        },
        {
          id: 6,
          title: 'Ï†ÑÍµ≠ ÎåÄÌîºÏÜå ÏãúÏÑ§ Ï†êÍ≤Ä Î∞è Î≥¥ÏôÑ ÏûëÏóÖ ÏßÑÌñâ',
          content: 'ÌñâÏ†ïÏïàÏ†ÑÎ∂ÄÎäî Ï†ÑÍµ≠ ÏßÄÏ†ï ÎåÄÌîºÏÜåÏùò ÏãúÏÑ§ ÌòÑÌô©ÏùÑ Ï†êÍ≤ÄÌïòÍ≥† ÎØ∏ÎπÑÏ†êÏùÑ Î≥¥ÏôÑÌïòÎäî ÏûëÏóÖÏùÑ ÏßÑÌñâ Ï§ëÏù¥ÎùºÍ≥† Î∞ùÌòîÏäµÎãàÎã§...',
          source: 'JTBC Îâ¥Ïä§',
          time: '5ÏãúÍ∞Ñ Ï†Ñ',
          category: 'ÎåÄÌîºÏÜå',
          thumbnail: 'üè†',
          url: 'https://news.jtbc.joins.com/example'
        }
      ];

      setNews(mockNews);
    } catch (error) {
      console.error('Îâ¥Ïä§ Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞ Ïã§Ìå®:', error);
      Alert.alert('Ïò§Î•ò', 'Îâ¥Ïä§ Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏Ïò¨ Ïàò ÏóÜÏäµÎãàÎã§.');
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    if (visible) {
      fetchNews();
    }
  }, [visible]);

  // Îâ¥Ïä§ Í∏∞ÏÇ¨ Ïó¥Í∏∞
  const openNews = (url) => {
    Linking.canOpenURL(url)
      .then((supported) => {
        if (supported) {
          Linking.openURL(url);
        } else {
          Alert.alert('Ïò§Î•ò', 'Í∏∞ÏÇ¨Î•º Ïó¥ Ïàò ÏóÜÏäµÎãàÎã§.');
        }
      })
      .catch((err) => console.error('Îâ¥Ïä§ Ïó¥Í∏∞ Ïò§Î•ò:', err));
  };

  // Ïπ¥ÌÖåÍ≥†Î¶¨Î≥Ñ Î∞∞Í≤ΩÏÉâ
  const getCategoryColor = (category) => {
    switch (category) {
      case 'ÌÉúÌíç':
        return '#2196f3';
      case 'ÏßÄÏßÑ':
        return '#ff9800';
      case 'ÌôîÏû¨':
        return '#f44336';
      case 'ÌïúÌåå':
        return '#607d8b';
      case 'ÏãúÏä§ÌÖú':
        return '#9c27b0';
      case 'Í∏∞Ïà†':
        return '#4caf50';
      case 'ÎåÄÌîºÏÜå':
        return '#795548';
      default:
        return '#666';
    }
  };

  const renderNewsItem = (item) => (
    <TouchableOpacity 
      key={item.id} 
      style={styles.newsItem}
      onPress={() => openNews(item.url)}
      activeOpacity={0.7}
    >
      <View style={styles.newsHeader}>
        <Text style={styles.newsThumbnail}>{item.thumbnail}</Text>
        <View style={styles.newsMetadata}>
          <View style={[styles.categoryTag, { backgroundColor: getCategoryColor(item.category) }]}>
            <Text style={styles.categoryText}>{item.category}</Text>
          </View>
          <Text style={styles.newsTime}>{item.time}</Text>
        </View>
      </View>
      
      <Text style={styles.newsTitle}>{item.title}</Text>
      <Text style={styles.newsContent} numberOfLines={3}>{item.content}</Text>
      
      <View style={styles.newsFooter}>
        <Text style={styles.newsSource}>{item.source}</Text>
        <TouchableOpacity style={styles.readMoreButton}>
          <Text style={styles.readMoreText}>ÏûêÏÑ∏Ìûà Î≥¥Í∏∞ ‚Üí</Text>
        </TouchableOpacity>
      </View>
    </TouchableOpacity>
  );

  return (
    <Modal
      visible={visible}
      animationType="slide"
      transparent={true}
      onRequestClose={onClose}
    >
      <View style={styles.modalOverlay}>
        <View style={styles.modalContent}>
          <View style={styles.modalHeader}>
            <Text style={styles.modalTitle}>üì∞ Ïû¨ÎÇú Îâ¥Ïä§</Text>
            <TouchableOpacity style={styles.closeButton} onPress={onClose}>
              <Text style={styles.closeButtonText}>‚úï</Text>
            </TouchableOpacity>
          </View>

          <View style={styles.subtitle}>
            <Text style={styles.subtitleText}>ÏµúÏã† Ïû¨ÎÇú Í¥ÄÎ†® Îâ¥Ïä§Î•º ÌôïÏù∏ÌïòÏÑ∏Ïöî</Text>
          </View>

          {loading ? (
            <View style={styles.loadingContainer}>
              <ActivityIndicator size="large" color="#4285f4" />
              <Text style={styles.loadingText}>Îâ¥Ïä§Î•º Í∞ÄÏ†∏Ïò§Îäî Ï§ë...</Text>
            </View>
          ) : (
            <ScrollView style={styles.newsList} showsVerticalScrollIndicator={false}>
              {news.length > 0 ? (
                news.map(renderNewsItem)
              ) : (
                <View style={styles.noDataContainer}>
                  <Text style={styles.noDataText}>Îâ¥Ïä§Í∞Ä ÏóÜÏäµÎãàÎã§</Text>
                </View>
              )}
            </ScrollView>
          )}
        </View>
      </View>
    </Modal>
  );
};

const styles = StyleSheet.create({
  modalOverlay: {
    flex: 1,
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
    justifyContent: 'flex-end',
  },
  modalContent: {
    backgroundColor: '#ffffff',
    borderTopLeftRadius: 20,
    borderTopRightRadius: 20,
    maxHeight: '85%',
    paddingBottom: 40,
  },
  modalHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingHorizontal: 20,
    paddingVertical: 16,
    borderBottomWidth: 1,
    borderBottomColor: '#f0f0f0',
  },
  modalTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#333',
  },
  closeButton: {
    width: 32,
    height: 32,
    borderRadius: 16,
    backgroundColor: '#f0f0f0',
    alignItems: 'center',
    justifyContent: 'center',
  },
  closeButtonText: {
    fontSize: 16,
    color: '#666',
  },
  subtitle: {
    paddingHorizontal: 20,
    paddingVertical: 12,
    backgroundColor: '#f8f9fa',
  },
  subtitleText: {
    fontSize: 14,
    color: '#666',
    textAlign: 'center',
  },
  loadingContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    paddingVertical: 60,
  },
  loadingText: {
    marginTop: 16,
    fontSize: 16,
    color: '#666',
  },
  newsList: {
    flex: 1,
    paddingHorizontal: 20,
  },
  newsItem: {
    backgroundColor: '#ffffff',
    borderRadius: 12,
    padding: 16,
    marginVertical: 8,
    borderWidth: 1,
    borderColor: '#e0e0e0',
    elevation: 2,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.1,
    shadowRadius: 2,
  },
  newsHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 12,
  },
  newsThumbnail: {
    fontSize: 24,
  },
  newsMetadata: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  categoryTag: {
    paddingHorizontal: 8,
    paddingVertical: 4,
    borderRadius: 12,
    marginRight: 8,
  },
  categoryText: {
    fontSize: 12,
    color: '#ffffff',
    fontWeight: '500',
  },
  newsTime: {
    fontSize: 12,
    color: '#666',
  },
  newsTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 8,
    lineHeight: 22,
  },
  newsContent: {
    fontSize: 14,
    color: '#666',
    lineHeight: 20,
    marginBottom: 12,
  },
  newsFooter: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingTop: 8,
    borderTopWidth: 1,
    borderTopColor: '#f0f0f0',
  },
  newsSource: {
    fontSize: 12,
    color: '#999',
    fontWeight: '500',
  },
  readMoreButton: {
    paddingHorizontal: 8,
    paddingVertical: 4,
  },
  readMoreText: {
    fontSize: 12,
    color: '#4285f4',
    fontWeight: '500',
  },
  noDataContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    paddingVertical: 60,
  },
  noDataText: {
    fontSize: 16,
    color: '#666',
  },
});

export default DisasterNewsModal;