import React, { useState } from 'react';
import {
  View,
  Text,
  StyleSheet,
  TouchableOpacity,
  ScrollView,
} from 'react-native';

const QuickActions = ({ onActionPress }) => {
  const [selectedAction, setSelectedAction] = useState(null);

  const quickActionData = [
    {
      id: 'earthquake',
      title: 'ÏßÄÏßÑ ÎåÄÏùë',
      subtitle: 'ÏßÄÏßÑ Î∞úÏÉùÏãú ÌñâÎèôÏöîÎ†π',
      icon: 'üèóÔ∏è',
      color: '#ff9800',
      description: 'ÏßÄÏßÑ Î∞úÏÉùÏãú ÏïàÏ†ÑÌïú ÎåÄÌîº Î∞©Î≤ïÏùÑ ÌôïÏù∏ÌïòÏÑ∏Ïöî'
    },
    {
      id: 'fire',
      title: 'ÌôîÏû¨ ÎåÄÏùë',
      subtitle: 'ÌôîÏû¨ Î∞úÏÉùÏãú ÎåÄÌîºÏöîÎ†π',
      icon: 'üî•',
      color: '#f44336',
      description: 'ÌôîÏû¨ Î∞úÏÉùÏãú Ïã†ÏÜçÌïú ÎåÄÌîº Î∞©Î≤ïÏùÑ ÌôïÏù∏ÌïòÏÑ∏Ïöî'
    },
    {
      id: 'flood',
      title: 'ÏàòÌï¥ ÎåÄÏùë',
      subtitle: 'ÌôçÏàò/ÌÉúÌíç ÎåÄÎπÑÏöîÎ†π',
      icon: 'üåä',
      color: '#2196f3',
      description: 'ÌôçÏàòÎÇò ÌÉúÌíç Î∞úÏÉùÏãú ÎåÄÎπÑ Î∞©Î≤ïÏùÑ ÌôïÏù∏ÌïòÏÑ∏Ïöî'
    },
    {
      id: 'blackout',
      title: 'Ï†ïÏ†Ñ ÎåÄÏùë',
      subtitle: 'Ï†ïÏ†Ñ Î∞úÏÉùÏãú ÌñâÎèôÏöîÎ†π',
      icon: '‚ö°',
      color: '#607d8b',
      description: 'Ï†ïÏ†Ñ Î∞úÏÉùÏãú ÏïàÏ†ÑÌïú ÌñâÎèô Î∞©Î≤ïÏùÑ ÌôïÏù∏ÌïòÏÑ∏Ïöî'
    },
    {
      id: 'shelter',
      title: 'ÎåÄÌîºÏÜå Ï∞æÍ∏∞',
      subtitle: 'Ï£ºÎ≥Ä ÎåÄÌîºÏÜå ÏúÑÏπò',
      icon: 'üè†',
      color: '#4caf50',
      description: 'ÌòÑÏû¨ ÏúÑÏπò Í∏∞Ï§Ä Í∞ÄÍπåÏö¥ ÎåÄÌîºÏÜåÎ•º Ï∞æÏïÑÎ≥¥ÏÑ∏Ïöî'
    },
    {
      id: 'emergency',
      title: 'Í∏¥Í∏âÏã†Í≥†',
      subtitle: '119/112 Ïã†Í≥†',
      icon: 'üö®',
      color: '#e91e63',
      description: 'Í∏¥Í∏âÏÉÅÌô© Î∞úÏÉùÏãú Ïã†ÏÜçÌïú Ïã†Í≥†Î•º ÎèÑÏôÄÎìúÎ¶ΩÎãàÎã§'
    }
  ];

  const handleActionPress = (action) => {
    setSelectedAction(action.id);
    
    // Î∂ÄÎ™® Ïª¥Ìè¨ÎÑåÌä∏Ïóê Ïï°ÏÖò Ï†ÑÎã¨
    if (onActionPress) {
      onActionPress(action);
    }
    
    // ÏÑ†ÌÉù Ìö®Í≥ºÎ•º ÏúÑÌïú ÌÉÄÏù¥Î®∏
    setTimeout(() => {
      setSelectedAction(null);
    }, 200);
  };

  const renderActionItem = (action) => (
    <TouchableOpacity
      key={action.id}
      style={[
        styles.actionItem,
        { backgroundColor: action.color },
        selectedAction === action.id && styles.selectedAction
      ]}
      onPress={() => handleActionPress(action)}
      activeOpacity={0.8}
    >
      <View style={styles.actionIconContainer}>
        <Text style={styles.actionIcon}>{action.icon}</Text>
      </View>
      <View style={styles.actionContent}>
        <Text style={styles.actionTitle}>{action.title}</Text>
        <Text style={styles.actionSubtitle}>{action.subtitle}</Text>
      </View>
      <View style={styles.actionArrow}>
        <Text style={styles.arrowText}>‚Ä∫</Text>
      </View>
    </TouchableOpacity>
  );

  return (
    <View style={styles.container}>
      <View style={styles.header}>
        <Text style={styles.headerTitle}>Îπ†Î•∏ ÌñâÎèôÏöîÎ†π</Text>
        <Text style={styles.headerSubtitle}>Í∏¥Í∏âÏÉÅÌô©Î≥Ñ ÎåÄÏùë Î∞©Î≤ïÏùÑ Îπ†Î•¥Í≤å ÌôïÏù∏ÌïòÏÑ∏Ïöî</Text>
      </View>
      
      <ScrollView 
        style={styles.actionsList}
        showsVerticalScrollIndicator={false}
        contentContainerStyle={styles.actionsContent}
      >
        {quickActionData.map(renderActionItem)}
      </ScrollView>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#f8f9fa',
  },
  header: {
    paddingHorizontal: 20,
    paddingVertical: 16,
    backgroundColor: '#ffffff',
    borderBottomWidth: 1,
    borderBottomColor: '#e0e0e0',
  },
  headerTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 4,
  },
  headerSubtitle: {
    fontSize: 14,
    color: '#666',
  },
  actionsList: {
    flex: 1,
  },
  actionsContent: {
    padding: 16,
  },
  actionItem: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#4285f4',
    borderRadius: 16,
    padding: 16,
    marginBottom: 12,
    elevation: 3,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
  },
  selectedAction: {
    transform: [{ scale: 0.98 }],
    opacity: 0.8,
  },
  actionIconContainer: {
    width: 50,
    height: 50,
    borderRadius: 25,
    backgroundColor: 'rgba(255, 255, 255, 0.2)',
    alignItems: 'center',
    justifyContent: 'center',
    marginRight: 16,
  },
  actionIcon: {
    fontSize: 24,
  },
  actionContent: {
    flex: 1,
  },
  actionTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#ffffff',
    marginBottom: 4,
  },
  actionSubtitle: {
    fontSize: 14,
    color: 'rgba(255, 255, 255, 0.9)',
  },
  actionArrow: {
    width: 24,
    height: 24,
    borderRadius: 12,
    backgroundColor: 'rgba(255, 255, 255, 0.2)',
    alignItems: 'center',
    justifyContent: 'center',
  },
  arrowText: {
    fontSize: 18,
    color: '#ffffff',
    fontWeight: 'bold',
  },
});

export default QuickActions;